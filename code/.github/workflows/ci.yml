name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Lint and format check
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: [frontend, backend]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: src/${{ matrix.component }}/package-lock.json
          
      - name: Install dependencies
        working-directory: ./src/${{ matrix.component }}
        run: npm ci
        
      - name: Run ESLint
        working-directory: ./src/${{ matrix.component }}
        run: npm run lint
        
      - name: Check formatting
        working-directory: ./src/${{ matrix.component }}
        run: npx prettier --check "src/**/*.{ts,tsx}"

  # Unit tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    strategy:
      matrix:
        component: [frontend, backend]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: src/${{ matrix.component }}/package-lock.json
          
      - name: Install dependencies
        working-directory: ./src/${{ matrix.component }}
        run: npm ci
        
      - name: Run tests
        working-directory: ./src/${{ matrix.component }}
        run: npm test

  # Build Docker images
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/marketplace
          
      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./src/frontend
          push: true
          tags: ghcr.io/${{ github.repository }}/marketplace-frontend:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          push: true
          tags: ghcr.io/${{ github.repository }}/marketplace-backend:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Build and push Auth Service
        uses: docker/build-push-action@v4
        with:
          context: ./src/backend
          file: ./src/backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/marketplace-auth:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max